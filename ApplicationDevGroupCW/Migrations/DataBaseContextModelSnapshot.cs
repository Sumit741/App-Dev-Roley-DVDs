// <auto-generated />
using System;
using ApplicationDevGroupCW.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationDevGroupCW.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Actor", b =>
                {
                    b.Property<int>("ActorNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActorNumber"), 1L, 1);

                    b.Property<string>("ActorFirstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActorSurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActorNumber");

                    b.ToTable("Actor");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.CastMember", b =>
                {
                    b.Property<int?>("ActorNumber")
                        .HasColumnType("int");

                    b.Property<int?>("DVDNumber")
                        .HasColumnType("int");

                    b.HasIndex("ActorNumber");

                    b.HasIndex("DVDNumber");

                    b.ToTable("CastMembers");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.DVDCategory", b =>
                {
                    b.Property<int>("CategoryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryNumber"), 1L, 1);

                    b.Property<bool>("AgeRestricted")
                        .HasColumnType("bit");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryNumber");

                    b.ToTable("DVDCategory");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.DVDCopy", b =>
                {
                    b.Property<int>("CopyNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CopyNumber"), 1L, 1);

                    b.Property<int?>("DVDNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatePurchased")
                        .HasColumnType("datetime2");

                    b.HasKey("CopyNumber");

                    b.HasIndex("DVDNumber");

                    b.ToTable("DVDCopy");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.DVDTitle", b =>
                {
                    b.Property<int>("DVDNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DVDNumber"), 1L, 1);

                    b.Property<int?>("CategroyNumber")
                        .HasColumnType("int");

                    b.Property<string>("DVDTitleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateReleased")
                        .HasColumnType("datetime2");

                    b.Property<float>("PenaltyCharge")
                        .HasColumnType("real");

                    b.Property<int?>("ProducerNumber")
                        .HasColumnType("int");

                    b.Property<float>("StandardCharge")
                        .HasColumnType("real");

                    b.Property<int?>("StudioNumber")
                        .HasColumnType("int");

                    b.HasKey("DVDNumber");

                    b.HasIndex("CategroyNumber");

                    b.HasIndex("ProducerNumber");

                    b.HasIndex("StudioNumber");

                    b.ToTable("DVDTitle");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Loan", b =>
                {
                    b.Property<int>("LoanNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanNumber"), 1L, 1);

                    b.Property<int?>("CopyNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDue")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReturned")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LoanTypeNumber")
                        .HasColumnType("int");

                    b.Property<int?>("MemberNumber")
                        .HasColumnType("int");

                    b.HasKey("LoanNumber");

                    b.HasIndex("CopyNumber");

                    b.HasIndex("LoanTypeNumber");

                    b.HasIndex("MemberNumber");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.LoanType", b =>
                {
                    b.Property<int>("LoanTypeNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoanTypeNumber"), 1L, 1);

                    b.Property<DateTime>("LoanDuration")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoanTypeNumber");

                    b.ToTable("LoanType");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Member", b =>
                {
                    b.Property<int>("MemberNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberNumber"), 1L, 1);

                    b.Property<string>("MemberAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemberDOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MembershipCategoryNumber")
                        .HasColumnType("int");

                    b.HasKey("MemberNumber");

                    b.HasIndex("MembershipCategoryNumber");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.MembershipCategory", b =>
                {
                    b.Property<int>("MembershipCategoryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MembershipCategoryNumber"), 1L, 1);

                    b.Property<string>("MembershipCategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("MembershipCategoryTotalLoans")
                        .HasColumnType("real");

                    b.HasKey("MembershipCategoryNumber");

                    b.ToTable("MembershipCategory");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Producer", b =>
                {
                    b.Property<int>("ProducerNumner")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProducerNumner"), 1L, 1);

                    b.Property<string>("ProducerName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProducerNumner");

                    b.ToTable("Producer");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Studio", b =>
                {
                    b.Property<int>("StudioNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudioNumber"), 1L, 1);

                    b.Property<string>("StudioName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudioNumber");

                    b.ToTable("Studio");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.User", b =>
                {
                    b.Property<int>("UserNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserNumber"), 1L, 1);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserNumber");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.CastMember", b =>
                {
                    b.HasOne("ApplicationDevGroupCW.Models.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorNumber");

                    b.HasOne("ApplicationDevGroupCW.Models.DVDTitle", "DVDTitle")
                        .WithMany()
                        .HasForeignKey("DVDNumber");

                    b.Navigation("Actor");

                    b.Navigation("DVDTitle");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.DVDCopy", b =>
                {
                    b.HasOne("ApplicationDevGroupCW.Models.DVDTitle", "DVDTitle")
                        .WithMany()
                        .HasForeignKey("DVDNumber");

                    b.Navigation("DVDTitle");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.DVDTitle", b =>
                {
                    b.HasOne("ApplicationDevGroupCW.Models.DVDCategory", "DVDCategory")
                        .WithMany()
                        .HasForeignKey("CategroyNumber");

                    b.HasOne("ApplicationDevGroupCW.Models.Producer", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerNumber");

                    b.HasOne("ApplicationDevGroupCW.Models.Studio", "Studio")
                        .WithMany()
                        .HasForeignKey("StudioNumber");

                    b.Navigation("DVDCategory");

                    b.Navigation("Producer");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Loan", b =>
                {
                    b.HasOne("ApplicationDevGroupCW.Models.DVDCopy", "DVDCopy")
                        .WithMany()
                        .HasForeignKey("CopyNumber");

                    b.HasOne("ApplicationDevGroupCW.Models.LoanType", "LoanType")
                        .WithMany()
                        .HasForeignKey("LoanTypeNumber");

                    b.HasOne("ApplicationDevGroupCW.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberNumber");

                    b.Navigation("DVDCopy");

                    b.Navigation("LoanType");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("ApplicationDevGroupCW.Models.Member", b =>
                {
                    b.HasOne("ApplicationDevGroupCW.Models.MembershipCategory", "MembershipCategory")
                        .WithMany()
                        .HasForeignKey("MembershipCategoryNumber");

                    b.Navigation("MembershipCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
